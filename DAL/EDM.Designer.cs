//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DAL", "FK_Folder_Bill", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Folder), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Bill), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Owner_Folder", "Owner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Owner), "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.Folder), true)]

#endregion

namespace DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBEntities object using the connection string found in the 'DBEntities' section of the application configuration file.
        /// </summary>
        public DBEntities() : base("name=DBEntities", "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBEntities object.
        /// </summary>
        public DBEntities(string connectionString) : base(connectionString, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBEntities object.
        /// </summary>
        public DBEntities(EntityConnection connection) : base(connection, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bill> Bill
        {
            get
            {
                if ((_Bill == null))
                {
                    _Bill = base.CreateObjectSet<Bill>("Bill");
                }
                return _Bill;
            }
        }
        private ObjectSet<Bill> _Bill;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder> Folder
        {
            get
            {
                if ((_Folder == null))
                {
                    _Folder = base.CreateObjectSet<Folder>("Folder");
                }
                return _Folder;
            }
        }
        private ObjectSet<Folder> _Folder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Owner> Owner
        {
            get
            {
                if ((_Owner == null))
                {
                    _Owner = base.CreateObjectSet<Owner>("Owner");
                }
                return _Owner;
            }
        }
        private ObjectSet<Owner> _Owner;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bill EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBill(Bill bill)
        {
            base.AddObject("Bill", bill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolder(Folder folder)
        {
            base.AddObject("Folder", folder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Owner EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwner(Owner owner)
        {
            base.AddObject("Owner", owner);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Bill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bill object.
        /// </summary>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="dateIssue">Initial value of the DateIssue property.</param>
        /// <param name="expiringDate">Initial value of the ExpiringDate property.</param>
        /// <param name="totalPay">Initial value of the TotalPay property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="folder">Initial value of the Folder property.</param>
        public static Bill CreateBill(global::System.Int32 number, global::System.DateTime dateIssue, global::System.DateTime expiringDate, global::System.Int32 totalPay, global::System.Boolean status, global::System.Byte[] image, global::System.String folder)
        {
            Bill bill = new Bill();
            bill.Number = number;
            bill.DateIssue = dateIssue;
            bill.ExpiringDate = expiringDate;
            bill.TotalPay = totalPay;
            bill.Status = status;
            bill.Image = image;
            bill.Folder = folder;
            return bill;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                if (_Number != value)
                {
                    OnNumberChanging(value);
                    ReportPropertyChanging("Number");
                    _Number = StructuralObject.SetValidValue(value, "Number");
                    ReportPropertyChanged("Number");
                    OnNumberChanged();
                }
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateIssue
        {
            get
            {
                return _DateIssue;
            }
            set
            {
                OnDateIssueChanging(value);
                ReportPropertyChanging("DateIssue");
                _DateIssue = StructuralObject.SetValidValue(value, "DateIssue");
                ReportPropertyChanged("DateIssue");
                OnDateIssueChanged();
            }
        }
        private global::System.DateTime _DateIssue;
        partial void OnDateIssueChanging(global::System.DateTime value);
        partial void OnDateIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiringDate
        {
            get
            {
                return _ExpiringDate;
            }
            set
            {
                OnExpiringDateChanging(value);
                ReportPropertyChanging("ExpiringDate");
                _ExpiringDate = StructuralObject.SetValidValue(value, "ExpiringDate");
                ReportPropertyChanged("ExpiringDate");
                OnExpiringDateChanged();
            }
        }
        private global::System.DateTime _ExpiringDate;
        partial void OnExpiringDateChanging(global::System.DateTime value);
        partial void OnExpiringDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalPay
        {
            get
            {
                return _TotalPay;
            }
            set
            {
                OnTotalPayChanging(value);
                ReportPropertyChanging("TotalPay");
                _TotalPay = StructuralObject.SetValidValue(value, "TotalPay");
                ReportPropertyChanged("TotalPay");
                OnTotalPayChanged();
            }
        }
        private global::System.Int32 _TotalPay;
        partial void OnTotalPayChanging(global::System.Int32 value);
        partial void OnTotalPayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image
        {
            get
            {
                return StructuralObject.GetValidValue(_Image);
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false, "Image");
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.Byte[] _Image;
        partial void OnImageChanging(global::System.Byte[] value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Folder
        {
            get
            {
                return _Folder;
            }
            set
            {
                OnFolderChanging(value);
                ReportPropertyChanging("Folder");
                _Folder = StructuralObject.SetValidValue(value, false, "Folder");
                ReportPropertyChanged("Folder");
                OnFolderChanged();
            }
        }
        private global::System.String _Folder;
        partial void OnFolderChanging(global::System.String value);
        partial void OnFolderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Folder_Bill", "Folder")]
        public Folder Folder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("DAL.FK_Folder_Bill", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("DAL.FK_Folder_Bill", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> Folder1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("DAL.FK_Folder_Bill", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("DAL.FK_Folder_Bill", "Folder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Folder CreateFolder(global::System.String id, global::System.String name)
        {
            Folder folder = new Folder();
            folder.ID = id;
            folder.Name = name;
            return folder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, "Owner");
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private Nullable<global::System.Int32> _Owner;
        partial void OnOwnerChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Folder_Bill", "Bill")]
        public EntityCollection<Bill> Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("DAL.FK_Folder_Bill", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("DAL.FK_Folder_Bill", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Owner_Folder", "Owner")]
        public Owner Owner1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("DAL.FK_Owner_Folder", "Owner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("DAL.FK_Owner_Folder", "Owner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Owner> Owner1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Owner>("DAL.FK_Owner_Folder", "Owner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Owner>("DAL.FK_Owner_Folder", "Owner", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Owner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Owner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Owner object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static Owner CreateOwner(global::System.Int32 id, global::System.String name, global::System.String password, global::System.String displayName)
        {
            Owner owner = new Owner();
            owner.ID = id;
            owner.Name = name;
            owner.Password = password;
            owner.DisplayName = displayName;
            return owner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Owner_Folder", "Folder")]
        public EntityCollection<Folder> Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("DAL.FK_Owner_Folder", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("DAL.FK_Owner_Folder", "Folder", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
